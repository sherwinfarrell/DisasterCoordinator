{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sherwin\\\\projects\\\\ASE Project\\\\LatestClientCoordinator\\\\disastercoordinatorwebview\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport fbConfig from \"./config/config\";\nimport firebase from 'firebase/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, fbConfig)));\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({\n  children\n}) {\n  _s();\n\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center white-text\",\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n\n_s(AuthIsLoaded, \"SvwR9yfdOSlAizXx+1ujAxpoAFQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = AuthIsLoaded;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(ReactReduxFirebaseProvider, { ...rrfProps,\n      children: /*#__PURE__*/_jsxDEV(AuthIsLoaded, {\n        children: [AuthIsLoaded, \"? \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthIsLoaded\");","map":{"version":3,"sources":["C:/Users/sherwin/projects/ASE Project/LatestClientCoordinator/disastercoordinatorwebview/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","applyMiddleware","compose","rootReducer","Provider","useSelector","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","isLoaded","fbConfig","firebase","store","withExtraArgument","rrfConfig","userProfile","useFirestoreForProfile","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,aAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,uBAAtC,QAAoE,iBAApE;AACA,SAAQC,0BAAR,EAAoCC,WAApC,EAAiDC,QAAjD,QAAgE,sBAAhE;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAGA,MAAMC,KAAK,GAAGf,WAAW,CAACG,WAAD,EAAcD,OAAO,CAC1CD,eAAe,CAACK,KAAK,CAACU,iBAAN,CAAwB;AAACL,EAAAA,WAAD;AAAcH,EAAAA;AAAd,CAAxB,CAAD,CAD2B,EAE1CD,cAAc,CAACO,QAAD,EAAWD,QAAX,CAF4B,CAArB,CAAzB;AASA,MAAMI,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,OADC;AAEdC,EAAAA,sBAAsB,EAAE;AAFV,CAAlB;AAKA,MAAMC,QAAQ,GAAG;AACbN,EAAAA,QADa;AAEbO,EAAAA,MAAM,EAAEJ,SAFK;AAEMJ,EAAAA,QAFN;AAGbS,EAAAA,QAAQ,EAAEP,KAAK,CAACO,QAHH;AAIbb,EAAAA;AAJa,CAAjB;;AAOA,SAASc,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAAA;;AAC9B,QAAMC,IAAI,GAAGpB,WAAW,CAACqB,KAAK,IAAIA,KAAK,CAACZ,QAAN,CAAeW,IAAzB,CAAxB;AACA,MAAI,CAACb,QAAQ,CAACa,IAAD,CAAb,EAAqB,oBAAO;AAAA,2BAAK;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACrB,sBAAO,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAJQF,Y;UACQlB,W;;;KADRkB,Y;AAMT1B,QAAQ,CAAC8B,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEZ,KAAjB;AAAA,2BACI,QAAC,0BAAD,OAAgCK,QAAhC;AAAA,6BACI,QAAC,YAAD;AAAA,mBACKG,YADL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAWIK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXJ,E,CAcA;AACA;AACA;;AACA9B,eAAe","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport {Provider, useSelector} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from 'redux-firestore';\r\nimport {ReactReduxFirebaseProvider, getFirebase, isLoaded} from 'react-redux-firebase';\r\nimport fbConfig from \"./config/config\";\r\nimport firebase from 'firebase/app';\r\n\r\n\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n    reduxFirestore(firebase, fbConfig)\r\n));\r\n\r\n\r\n\r\n\r\n\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true\r\n}\r\n\r\nconst rrfProps = {\r\n    firebase,\r\n    config: rrfConfig, fbConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance\r\n};\r\n\r\nfunction AuthIsLoaded({children}) {\r\n    const auth = useSelector(state => state.firebase.auth)\r\n    if (!isLoaded(auth)) return <div><p className='center white-text'>Loading.....</p></div>;\r\n    return <App/>\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <ReactReduxFirebaseProvider {...rrfProps}>\r\n                <AuthIsLoaded>\r\n                    {AuthIsLoaded}\r\n                    ? </AuthIsLoaded>\r\n\r\n            </ReactReduxFirebaseProvider>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}