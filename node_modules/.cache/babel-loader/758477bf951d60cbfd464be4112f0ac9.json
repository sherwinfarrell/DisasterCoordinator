{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sherwin\\\\projects\\\\ASE Project\\\\LatestClientCoordinator\\\\disastercoordinatorwebview\\\\src\\\\components\\\\Mapping\\\\MapView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Map, TileLayer, FeatureGroup } from 'react-leaflet'; // import 'leaflet/dist/leaflet.css';\n\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport { EditControl } from 'react-leaflet-draw';\nimport 'leaflet-draw';\nimport { connect } from \"react-redux\";\nimport { firestoreConnect, firebaseConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addLatLng, addLatLngs } from \"../../store/actions/addLatLng\";\nimport { iconPerson } from './PersonMarker';\nimport { useFirestoreConnect, useFirebaseConnect, useFirestore, useFirebase } from \"react-redux-firebase\";\nimport { DivIcon, marker, useMap, Marker, Popup } from 'leaflet';\nimport L from 'leaflet';\nimport Control from 'react-leaflet-control';\nimport download from \"../../img/personmarker.svg\";\nimport ambulance from \"./ambulance.png\";\nimport hospital from \"./hospital.png\";\nimport policecar from \"./policecar.png\";\nimport firetruck from \"./firetruck2.png\";\nimport bus from \"./bus.jpg\";\nimport car from \"./car.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: download,\n  iconSize: [38, 95],\n  // size of the icon\n  iconAnchor: [22, 94],\n  // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],\n  // the same for the shadow\n  popupAnchor: [-3, -76] // \n\n});\nlet ambulanceIcon = L.icon({\n  iconUrl: ambulance,\n  iconSize: [30, 50],\n  // size of the icon\n  iconAnchor: [22, 94],\n  // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],\n  // the same for the shadow\n  popupAnchor: [-3, -76] // \n\n});\nlet hospitalIcon = L.icon({\n  iconUrl: hospital,\n  iconSize: [30, 50],\n  // size of the icon\n  iconAnchor: [22, 94],\n  // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],\n  // the same for the shadow\n  popupAnchor: [-3, -76] // \n\n});\nlet policecarIcon = L.icon({\n  iconUrl: policecar,\n  iconSize: [30, 50],\n  // size of the icon\n  iconAnchor: [22, 94],\n  // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],\n  // the same for the shadow\n  popupAnchor: [-3, -76] // \n\n});\nlet firetruckIcon = L.icon({\n  iconUrl: firetruck,\n  iconSize: [30, 50],\n  // size of the icon\n  iconAnchor: [22, 94],\n  // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],\n  // the same for the shadow\n  popupAnchor: [-3, -76] // \n\n});\nlet busIcon = L.icon({\n  iconUrl: bus,\n  iconSize: [30, 50],\n  // size of the icon\n  iconAnchor: [22, 94],\n  // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],\n  // the same for the shadow\n  popupAnchor: [-3, -76] // \n\n});\nlet carIcon = L.icon({\n  iconUrl: car,\n  iconSize: [30, 50],\n  // size of the icon\n  iconAnchor: [22, 94],\n  // point of the icon which will correspond to marker's location\n  shadowAnchor: [4, 62],\n  // the same for the shadow\n  popupAnchor: [-3, -76] // \n\n});\n\nconst MapView = props => {\n  _s();\n\n  const mapRef = useRef();\n  const [editableFG, setEditableFG] = useState(null);\n  const [latLng, setLatLng] = useState(null);\n  const [mapLayers, setMapLayers] = useState([]);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [markerType, setMarkerType] = useState(null);\n  let disasterCount = 0;\n\n  const _onCreated = e => {\n    const drawnItems = editableFG.leafletElement._layers;\n    var layer = e.layer;\n    var drawedCord = e.layer.toGeoJSON().geometry.coordinates;\n    var radius = e.layer.toGeoJSON();\n    const {\n      layerType\n    } = e;\n\n    if (Object.keys(drawnItems).length > 1) {\n      Object.keys(drawnItems).forEach((layerid, index) => {\n        if (index > 0) return;\n        const layer = drawnItems[layerid];\n        editableFG.leafletElement.removeLayer(layer);\n      });\n      console.log(drawnItems);\n    }\n\n    if (e.layerType == \"rectangle\") {\n      // console.log(layer.getLatLngs())\n      let latLngs = layer.getLatLngs();\n      let latLngsArr = [];\n      Object.keys(latLngs[0]).forEach((e, i) => latLngsArr.push([latLngs[0][e].lat, latLngs[0][e].lng]));\n      console.log(\"These are the Lngs and Lat\", latLngsArr);\n      let coordinates = {\n        'coordinates': latLngsArr\n      };\n      props.addLatLngs(coordinates, disasterCount);\n      disasterCount = disasterCount + 1;\n    }\n\n    if (e.layerType == \"circle\") {\n      console.log(layer._latlng); //    props.addLatLng({\"Latitude\":lat, \"Longitude\" : lng})\n    }\n  };\n\n  const onFeatureGroupReady = reactFGref => {\n    // store the ref for future access to content\n    setEditableFG(reactFGref);\n  };\n\n  const handleClick = e => {\n    // console.log(instance.fireStore);\n    const {\n      lat,\n      lng\n    } = e.latlng; // firebase.initializeApp();\n\n    console.log(lat, lng); // firebase.ref(\"poi\").set(latLng)\n\n    markers.push((lat, lng, markerType));\n    setMarkers(markers);\n    let map = mapRef.current.leafletElement;\n    console.log(map);\n    L.marker(e.latlng, {\n      icon: DefaultIcon\n    }).addTo(map);\n    props.addLatLng({\n      \"Latitude\": lat,\n      \"Longitude\": lng\n    });\n  };\n\n  const markerOnClick = e => {\n    let map = mapRef.current.leafletElement;\n    console.log(map);\n    L.marker([53.335229447516774, -6.269385586492718], {\n      icon: ambulanceIcon\n    }).addTo(map);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      ref: mapRef,\n      center: [53.3498, -6.2603],\n      zoom: 12,\n      style: {\n        height: '91vh'\n      },\n      onclick: handleClick,\n      whenCreated: setMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"Powered by <a href=\\\"https://www.esri.com\\\">Esri</a>\",\n        url: \"http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n        ref: featureGroupRef => {\n          onFeatureGroupReady(featureGroupRef);\n        },\n        children: /*#__PURE__*/_jsxDEV(EditControl, {\n          style: {\n            color: \"red\"\n          },\n          draw: {\n            circle: {\n              shapeOptions: {\n                color: \"red\"\n              },\n              showLength: true,\n              metric: true,\n              feet: true,\n              showArea: true\n            },\n            polyline: {\n              shapeOptions: {\n                color: \"red\"\n              }\n            },\n            polygone: {\n              shapeOptions: {\n                color: \"red\"\n              }\n            },\n            rectangle: {\n              shapeOptions: {\n                color: \"red\"\n              }\n            },\n            // marker: false,\n            circlemarker: false\n          },\n          position: \"topright\",\n          onCreated: _onCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        position: \"bottomleft\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dropdown-trigger btn\",\n          href: \"#\",\n          \"data-target\": \"dropdown1\",\n          children: \"Drop Me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"dropdown1\",\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#!\",\n              children: \"one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#!\",\n              children: \"two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"divider\",\n            tabIndex: \"-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#!\",\n              children: \"three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#!\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                children: \"view_module\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 42\n              }, this), \"four\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#!\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                children: \"cloud\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 42\n              }, this), \"five\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapView, \"j2T7RcDrR75u2wwzPMO4yNumxkc=\");\n\n_c = MapView;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addLatLng: latLng => dispatch(addLatLng(latLng)),\n    addLatLngs: (latLngs, count) => dispatch(addLatLngs(latLngs, count))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(MapView);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["C:/Users/sherwin/projects/ASE Project/LatestClientCoordinator/disastercoordinatorwebview/src/components/Mapping/MapView.js"],"names":["React","useState","useEffect","useCallback","useRef","Map","TileLayer","FeatureGroup","EditControl","connect","firestoreConnect","firebaseConnect","compose","useSelector","useDispatch","addLatLng","addLatLngs","iconPerson","useFirestoreConnect","useFirebaseConnect","useFirestore","useFirebase","DivIcon","marker","useMap","Marker","Popup","L","Control","ambulance","hospital","policecar","firetruck","bus","car","DefaultIcon","icon","iconUrl","download","iconSize","iconAnchor","shadowAnchor","popupAnchor","ambulanceIcon","hospitalIcon","policecarIcon","firetruckIcon","busIcon","carIcon","MapView","props","mapRef","editableFG","setEditableFG","latLng","setLatLng","mapLayers","setMapLayers","map","setMap","markers","setMarkers","markerType","setMarkerType","disasterCount","_onCreated","e","drawnItems","leafletElement","_layers","layer","drawedCord","toGeoJSON","geometry","coordinates","radius","layerType","Object","keys","length","forEach","layerid","index","removeLayer","console","log","latLngs","getLatLngs","latLngsArr","i","push","lat","lng","_latlng","onFeatureGroupReady","reactFGref","handleClick","latlng","current","addTo","markerOnClick","height","featureGroupRef","color","circle","shapeOptions","showLength","metric","feet","showArea","polyline","polygone","rectangle","circlemarker","mapDispatchToProps","dispatch","count"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Map, TileLayer, FeatureGroup } from 'react-leaflet';\r\n// import 'leaflet/dist/leaflet.css';\r\n\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport { EditControl } from 'react-leaflet-draw';\r\nimport 'leaflet-draw';\r\nimport {connect} from \"react-redux\";\r\nimport {firestoreConnect, firebaseConnect} from \"react-redux-firebase\";\r\nimport {compose} from \"redux\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addLatLng, addLatLngs } from \"../../store/actions/addLatLng\";\r\nimport {iconPerson} from './PersonMarker'\r\nimport { useFirestoreConnect, useFirebaseConnect, useFirestore, useFirebase } from \"react-redux-firebase\";\r\nimport { DivIcon, marker, useMap , Marker, Popup} from 'leaflet';\r\nimport L from 'leaflet';\r\nimport Control from 'react-leaflet-control';\r\nimport download from \"../../img/personmarker.svg\"\r\nimport ambulance from \"./ambulance.png\"\r\nimport hospital from \"./hospital.png\"\r\nimport policecar from \"./policecar.png\"\r\nimport firetruck from \"./firetruck2.png\"\r\nimport bus from \"./bus.jpg\"\r\nimport car from \"./car.jpg\"\r\n\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: download,\r\n    iconSize:     [38, 95], // size of the icon\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76]// \r\n\r\n  });\r\n\r\n\r\nlet ambulanceIcon = L.icon({\r\n    iconUrl: ambulance,\r\n    iconSize:     [30, 50], // size of the icon\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76]// \r\n\r\n  });\r\n\r\n  let hospitalIcon = L.icon({\r\n    iconUrl: hospital,\r\n    iconSize:     [30, 50], // size of the icon\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76]// \r\n\r\n  });\r\n\r\n  let policecarIcon = L.icon({\r\n    iconUrl: policecar,\r\n    iconSize:     [30, 50], // size of the icon\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76]// \r\n\r\n  });\r\n  let firetruckIcon = L.icon({\r\n    iconUrl: firetruck,\r\n    iconSize:     [30, 50], // size of the icon\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76]// \r\n\r\n  });\r\n  let busIcon = L.icon({\r\n    iconUrl: bus,\r\n    iconSize:     [30, 50], // size of the icon\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76]// \r\n\r\n  });\r\n  let carIcon = L.icon({\r\n    iconUrl: car,\r\n    iconSize:     [30, 50], // size of the icon\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76]// \r\n\r\n  });\r\n \r\n\r\n\r\nconst MapView = (props) => {\r\n   const mapRef = useRef()\r\n\r\n    const [editableFG, setEditableFG] = useState(null);\r\n    const [ latLng, setLatLng] = useState(null);\r\n    const [mapLayers, setMapLayers] = useState([]);\r\n    const [map, setMap] = useState(null);\r\n    const [markers, setMarkers]= useState([])\r\n    const [markerType , setMarkerType] = useState(null)\r\n    let disasterCount = 0\r\n\r\n    const _onCreated = e => {\r\n    \r\n        const drawnItems = editableFG.leafletElement._layers;\r\n\r\n        var layer = e.layer;\r\n\r\n        var drawedCord = e.layer.toGeoJSON().geometry.coordinates;\r\n        var radius = e.layer.toGeoJSON()\r\n        const {layerType } = e;\r\n      \r\n\r\n\r\n\r\n        if (Object.keys(drawnItems).length > 1) {\r\n            Object.keys(drawnItems).forEach((layerid, index) => {\r\n                if (index > 0) return;\r\n                const layer = drawnItems[layerid];\r\n                editableFG.leafletElement.removeLayer(layer);\r\n            });\r\n            console.log(drawnItems);\r\n        }\r\n  \r\n\r\n       if(e.layerType ==\"rectangle\"){\r\n            // console.log(layer.getLatLngs())\r\n            let latLngs = layer.getLatLngs()\r\n            let latLngsArr = []\r\n\r\n            Object.keys(latLngs[0]).forEach((e,i) => latLngsArr.push([latLngs[0][e].lat, latLngs[0][e].lng]))\r\n            console.log(\"These are the Lngs and Lat\", latLngsArr)\r\n\r\n            let coordinates = {'coordinates': latLngsArr}\r\n\r\n            props.addLatLngs(coordinates, disasterCount)\r\n            disasterCount = disasterCount +1;\r\n\r\n       }\r\n       if(e.layerType == \"circle\"){\r\n           console.log(layer._latlng)\r\n        //    props.addLatLng({\"Latitude\":lat, \"Longitude\" : lng})\r\n\r\n       }\r\n\r\n    };\r\n\r\n \r\n\r\n\r\n    const onFeatureGroupReady = reactFGref => {\r\n        // store the ref for future access to content\r\n        setEditableFG(reactFGref);\r\n    };\r\n\r\n\r\n    const handleClick = (e) => {\r\n        // console.log(instance.fireStore);\r\n        const { lat, lng } = e.latlng;\r\n        // firebase.initializeApp();\r\n        console.log(lat, lng);\r\n        // firebase.ref(\"poi\").set(latLng)\r\n        markers.push((lat, lng, markerType))\r\n        setMarkers(markers)\r\n\r\n        let map = mapRef.current.leafletElement;\r\n       console.log(map)\r\n       L.marker(e.latlng, {icon:DefaultIcon}).addTo(map)\r\n\r\n        props.addLatLng({\"Latitude\":lat, \"Longitude\" : lng})\r\n      }\r\n\r\n    const markerOnClick = (e) => {\r\n\r\n       let map = mapRef.current.leafletElement;\r\n       console.log(map)\r\n       L.marker([53.335229447516774, -6.269385586492718], {icon:ambulanceIcon}).addTo(map)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Map ref={mapRef}\r\n            center={[53.3498, -6.2603]}\r\n            zoom={12}\r\n            style={{ height: '91vh' }}\r\n            onclick = {handleClick} \r\n            whenCreated={setMap}\r\n\r\n            \r\n            >\r\n            {/* <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n            /> */}\r\n                    <TileLayer\r\n          attribution=\"Powered by <a href=&quot;https://www.esri.com&quot;>Esri</a>\"\r\n          url=\"http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n        />\r\n             \r\n            <FeatureGroup\r\n                ref={featureGroupRef => {\r\n                    onFeatureGroupReady(featureGroupRef);\r\n                }}>\r\n                <EditControl style={{color: \"red\"}} \r\n                        draw={{\r\n                                    circle: {\r\n                                        shapeOptions: { color: \"red\" },\r\n                                        showLength: true,\r\n                                        metric: true,\r\n                                        feet: true,\r\n                                        showArea: true\r\n                                    },\r\n                                    polyline: { \r\n                                        shapeOptions: { color: \"red\" } \r\n                                    },\r\n                                    polygone: { \r\n                                        shapeOptions: { color: \"red\" } \r\n                                    },\r\n                                    rectangle: { \r\n                                        shapeOptions: { color: \"red\" } \r\n                                    },\r\n                                \r\n                                    \r\n\r\n                                    // marker: false,\r\n                                    circlemarker:false\r\n\r\n                            }}\r\n                                \r\n                        position=\"topright\" onCreated={_onCreated} />\r\n            </FeatureGroup>\r\n         \r\n    \r\n            <Control position=\"bottomleft\" >\r\n                    {/* <button \r\n                    onClick={ markerOnClick }\r\n                    >\r\n                    Person Marker\r\n                    </button>\r\n                     */}\r\n\r\n                    <a className='dropdown-trigger btn' href='#' data-target='dropdown1'>Drop Me!</a>\r\n\r\n                    <ul id='dropdown1' className='dropdown-content'>\r\n                        <li><a href=\"#!\">one</a></li>\r\n                        <li><a href=\"#!\">two</a></li>\r\n                        <li className=\"divider\" tabIndex=\"-1\"></li>\r\n                        <li><a href=\"#!\">three</a></li>\r\n                        <li><a href=\"#!\"><i className=\"material-icons\">view_module</i>four</a></li>\r\n                        <li><a href=\"#!\"><i className=\"material-icons\">cloud</i>five</a></li>\r\n                    </ul>\r\n            </Control>\r\n    \r\n        </Map>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addLatLng: (latLng) => dispatch(addLatLng(latLng)),\r\n        addLatLngs: (latLngs, count)=> dispatch(addLatLngs(latLngs, count))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MapView);\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}