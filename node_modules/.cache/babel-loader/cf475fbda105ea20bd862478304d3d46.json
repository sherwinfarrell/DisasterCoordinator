{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { latLngBounds, Map as LeafletMap } from 'leaflet';\nimport React from 'react';\nimport { LeafletProvider } from './context';\nimport MapEvented from './MapEvented';\nimport updateClassName from './utils/updateClassName';\nimport omit from './utils/omit';\nvar OTHER_PROPS = ['children', 'className', 'id', 'style', 'useFlyTo', 'whenReady'];\n\nvar normalizeCenter = function normalizeCenter(pos) {\n  return Array.isArray(pos) ? [pos[0], pos[1]] : [pos.lat, pos.lon ? pos.lon : pos.lng];\n};\n\nvar Map = /*#__PURE__*/function (_MapEvented) {\n  _inheritsLoose(Map, _MapEvented);\n\n  function Map(props) {\n    var _this;\n\n    _this = _MapEvented.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"contextValue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", {\n      center: undefined,\n      zoom: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_ready\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_updating\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewportChange\", function () {\n      var center = _this.leafletElement.getCenter();\n\n      _this.viewport = {\n        center: center ? [center.lat, center.lng] : undefined,\n        zoom: _this.leafletElement.getZoom()\n      };\n\n      if (_this.props.onViewportChange && !_this._updating) {\n        _this.props.onViewportChange(_this.viewport);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewportChanged\", function () {\n      if (_this.props.onViewportChanged && !_this._updating) {\n        _this.props.onViewportChanged(_this.viewport);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindContainer\", function (container) {\n      _this.container = container;\n    });\n\n    _this.className = props.className;\n    return _this;\n  }\n\n  var _proto = Map.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var viewport = props.viewport,\n        options = _objectWithoutPropertiesLoose(props, [\"viewport\"]);\n\n    if (viewport) {\n      if (viewport.center) {\n        options.center = viewport.center;\n      }\n\n      if (typeof viewport.zoom === 'number') {\n        options.zoom = viewport.zoom;\n      }\n    }\n\n    return new LeafletMap(this.container, options);\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    this._updating = true;\n    var animate = toProps.animate,\n        bounds = toProps.bounds,\n        boundsOptions = toProps.boundsOptions,\n        boxZoom = toProps.boxZoom,\n        center = toProps.center,\n        className = toProps.className,\n        doubleClickZoom = toProps.doubleClickZoom,\n        dragging = toProps.dragging,\n        keyboard = toProps.keyboard,\n        maxBounds = toProps.maxBounds,\n        scrollWheelZoom = toProps.scrollWheelZoom,\n        tap = toProps.tap,\n        touchZoom = toProps.touchZoom,\n        useFlyTo = toProps.useFlyTo,\n        viewport = toProps.viewport,\n        zoom = toProps.zoom;\n    updateClassName(this.container, fromProps.className, className);\n\n    if (viewport && viewport !== fromProps.viewport) {\n      var c = viewport.center ? viewport.center : center;\n      var z = viewport.zoom == null ? zoom : viewport.zoom;\n\n      if (useFlyTo === true) {\n        this.leafletElement.flyTo(c, z, {\n          animate: animate\n        });\n      } else {\n        this.leafletElement.setView(c, z, {\n          animate: animate\n        });\n      }\n    } else if (center && this.shouldUpdateCenter(center, fromProps.center)) {\n      if (useFlyTo === true) {\n        this.leafletElement.flyTo(center, zoom, {\n          animate: animate\n        });\n      } else {\n        this.leafletElement.setView(center, zoom, {\n          animate: animate\n        });\n      }\n    } else if (typeof zoom === 'number' && zoom !== fromProps.zoom) {\n      if (fromProps.zoom == null) {\n        this.leafletElement.setView(center, zoom);\n      } else {\n        this.leafletElement.setZoom(zoom);\n      }\n    }\n\n    if (maxBounds && this.shouldUpdateBounds(maxBounds, fromProps.maxBounds)) {\n      this.leafletElement.setMaxBounds(maxBounds);\n    }\n\n    if (bounds && (this.shouldUpdateBounds(bounds, fromProps.bounds) || boundsOptions !== fromProps.boundsOptions)) {\n      if (useFlyTo === true) {\n        this.leafletElement.flyToBounds(bounds, boundsOptions);\n      } else {\n        this.leafletElement.fitBounds(bounds, boundsOptions);\n      }\n    }\n\n    if (boxZoom !== fromProps.boxZoom) {\n      if (boxZoom === true) {\n        this.leafletElement.boxZoom.enable();\n      } else {\n        this.leafletElement.boxZoom.disable();\n      }\n    }\n\n    if (doubleClickZoom !== fromProps.doubleClickZoom) {\n      if (doubleClickZoom === true) {\n        this.leafletElement.doubleClickZoom.enable();\n      } else {\n        this.leafletElement.doubleClickZoom.disable();\n      }\n    }\n\n    if (dragging !== fromProps.dragging) {\n      if (dragging === true) {\n        this.leafletElement.dragging.enable();\n      } else {\n        this.leafletElement.dragging.disable();\n      }\n    }\n\n    if (keyboard !== fromProps.keyboard) {\n      if (keyboard === true) {\n        this.leafletElement.keyboard.enable();\n      } else {\n        this.leafletElement.keyboard.disable();\n      }\n    }\n\n    if (scrollWheelZoom !== fromProps.scrollWheelZoom) {\n      if (scrollWheelZoom === true || typeof scrollWheelZoom === 'string') {\n        this.leafletElement.options.scrollWheelZoom = scrollWheelZoom;\n        this.leafletElement.scrollWheelZoom.enable();\n      } else {\n        this.leafletElement.scrollWheelZoom.disable();\n      }\n    }\n\n    if (tap !== fromProps.tap) {\n      if (tap === true) {\n        this.leafletElement.tap.enable();\n      } else {\n        this.leafletElement.tap.disable();\n      }\n    }\n\n    if (touchZoom !== fromProps.touchZoom) {\n      if (touchZoom === true || typeof touchZoom === 'string') {\n        this.leafletElement.options.touchZoom = touchZoom;\n        this.leafletElement.touchZoom.enable();\n      } else {\n        this.leafletElement.touchZoom.disable();\n      }\n    }\n\n    this._updating = false;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var props = omit.apply(void 0, [this.props].concat(OTHER_PROPS));\n    this.leafletElement = this.createLeafletElement(props);\n    this.leafletElement.on('move', this.onViewportChange);\n    this.leafletElement.on('moveend', this.onViewportChanged);\n\n    if (props.bounds != null) {\n      this.leafletElement.fitBounds(props.bounds, props.boundsOptions);\n    }\n\n    this.contextValue = {\n      layerContainer: this.leafletElement,\n      map: this.leafletElement\n    };\n\n    _MapEvented.prototype.componentDidMount.call(this);\n\n    this.forceUpdate(); // Re-render now that leafletElement is created\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this._ready === false) {\n      this._ready = true;\n\n      if (this.props.whenReady) {\n        this.leafletElement.whenReady(this.props.whenReady);\n      }\n    }\n\n    _MapEvented.prototype.componentDidUpdate.call(this, prevProps);\n\n    this.updateLeafletElement(prevProps, this.props);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    _MapEvented.prototype.componentWillUnmount.call(this);\n\n    this.leafletElement.off('move', this.onViewportChange);\n    this.leafletElement.off('moveend', this.onViewportChanged); // The canvas renderer uses requestAnimationFrame, making a deferred call to a deleted object\n    // When preferCanvas is set, use simpler teardown logic\n\n    if (this.props.preferCanvas === true) {\n      this.leafletElement._initEvents(true);\n\n      this.leafletElement._stop();\n    } else {\n      this.leafletElement.remove();\n    }\n  };\n\n  _proto.shouldUpdateCenter = function shouldUpdateCenter(next, prev) {\n    if (!prev) return true;\n    next = normalizeCenter(next);\n    prev = normalizeCenter(prev);\n    return next[0] !== prev[0] || next[1] !== prev[1];\n  };\n\n  _proto.shouldUpdateBounds = function shouldUpdateBounds(next, prev) {\n    return prev ? !latLngBounds(next).equals(latLngBounds(prev)) : true;\n  };\n\n  _proto.render = function render() {\n    return React.createElement(\"div\", {\n      className: this.className,\n      id: this.props.id,\n      ref: this.bindContainer,\n      style: this.props.style\n    }, this.contextValue ? React.createElement(LeafletProvider, {\n      value: this.contextValue\n    }, this.props.children) : null);\n  };\n\n  return Map;\n}(MapEvented);\n\nexport { Map as default };","map":{"version":3,"sources":["C:/Users/sherwin/projects/ASE Project/LatestClientCoordinator/disastercoordinatorwebview/node_modules/react-leaflet/es/Map.js"],"names":["_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","_defineProperty","latLngBounds","Map","LeafletMap","React","LeafletProvider","MapEvented","updateClassName","omit","OTHER_PROPS","normalizeCenter","pos","Array","isArray","lat","lon","lng","_MapEvented","props","_this","call","center","undefined","zoom","leafletElement","getCenter","viewport","getZoom","onViewportChange","_updating","onViewportChanged","container","className","_proto","prototype","createLeafletElement","options","updateLeafletElement","fromProps","toProps","animate","bounds","boundsOptions","boxZoom","doubleClickZoom","dragging","keyboard","maxBounds","scrollWheelZoom","tap","touchZoom","useFlyTo","c","z","flyTo","setView","shouldUpdateCenter","setZoom","shouldUpdateBounds","setMaxBounds","flyToBounds","fitBounds","enable","disable","componentDidMount","apply","concat","on","contextValue","layerContainer","map","forceUpdate","componentDidUpdate","prevProps","_ready","whenReady","componentWillUnmount","off","preferCanvas","_initEvents","_stop","remove","next","prev","equals","render","createElement","id","ref","bindContainer","style","value","children","default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { latLngBounds, Map as LeafletMap } from 'leaflet';\nimport React from 'react';\nimport { LeafletProvider } from './context';\nimport MapEvented from './MapEvented';\nimport updateClassName from './utils/updateClassName';\nimport omit from './utils/omit';\nvar OTHER_PROPS = ['children', 'className', 'id', 'style', 'useFlyTo', 'whenReady'];\n\nvar normalizeCenter = function normalizeCenter(pos) {\n  return Array.isArray(pos) ? [pos[0], pos[1]] : [pos.lat, pos.lon ? pos.lon : pos.lng];\n};\n\nvar Map =\n/*#__PURE__*/\nfunction (_MapEvented) {\n  _inheritsLoose(Map, _MapEvented);\n\n  function Map(props) {\n    var _this;\n\n    _this = _MapEvented.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"contextValue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", {\n      center: undefined,\n      zoom: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_ready\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_updating\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewportChange\", function () {\n      var center = _this.leafletElement.getCenter();\n\n      _this.viewport = {\n        center: center ? [center.lat, center.lng] : undefined,\n        zoom: _this.leafletElement.getZoom()\n      };\n\n      if (_this.props.onViewportChange && !_this._updating) {\n        _this.props.onViewportChange(_this.viewport);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onViewportChanged\", function () {\n      if (_this.props.onViewportChanged && !_this._updating) {\n        _this.props.onViewportChanged(_this.viewport);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bindContainer\", function (container) {\n      _this.container = container;\n    });\n\n    _this.className = props.className;\n    return _this;\n  }\n\n  var _proto = Map.prototype;\n\n  _proto.createLeafletElement = function createLeafletElement(props) {\n    var viewport = props.viewport,\n        options = _objectWithoutPropertiesLoose(props, [\"viewport\"]);\n\n    if (viewport) {\n      if (viewport.center) {\n        options.center = viewport.center;\n      }\n\n      if (typeof viewport.zoom === 'number') {\n        options.zoom = viewport.zoom;\n      }\n    }\n\n    return new LeafletMap(this.container, options);\n  };\n\n  _proto.updateLeafletElement = function updateLeafletElement(fromProps, toProps) {\n    this._updating = true;\n    var animate = toProps.animate,\n        bounds = toProps.bounds,\n        boundsOptions = toProps.boundsOptions,\n        boxZoom = toProps.boxZoom,\n        center = toProps.center,\n        className = toProps.className,\n        doubleClickZoom = toProps.doubleClickZoom,\n        dragging = toProps.dragging,\n        keyboard = toProps.keyboard,\n        maxBounds = toProps.maxBounds,\n        scrollWheelZoom = toProps.scrollWheelZoom,\n        tap = toProps.tap,\n        touchZoom = toProps.touchZoom,\n        useFlyTo = toProps.useFlyTo,\n        viewport = toProps.viewport,\n        zoom = toProps.zoom;\n    updateClassName(this.container, fromProps.className, className);\n\n    if (viewport && viewport !== fromProps.viewport) {\n      var c = viewport.center ? viewport.center : center;\n      var z = viewport.zoom == null ? zoom : viewport.zoom;\n\n      if (useFlyTo === true) {\n        this.leafletElement.flyTo(c, z, {\n          animate: animate\n        });\n      } else {\n        this.leafletElement.setView(c, z, {\n          animate: animate\n        });\n      }\n    } else if (center && this.shouldUpdateCenter(center, fromProps.center)) {\n      if (useFlyTo === true) {\n        this.leafletElement.flyTo(center, zoom, {\n          animate: animate\n        });\n      } else {\n        this.leafletElement.setView(center, zoom, {\n          animate: animate\n        });\n      }\n    } else if (typeof zoom === 'number' && zoom !== fromProps.zoom) {\n      if (fromProps.zoom == null) {\n        this.leafletElement.setView(center, zoom);\n      } else {\n        this.leafletElement.setZoom(zoom);\n      }\n    }\n\n    if (maxBounds && this.shouldUpdateBounds(maxBounds, fromProps.maxBounds)) {\n      this.leafletElement.setMaxBounds(maxBounds);\n    }\n\n    if (bounds && (this.shouldUpdateBounds(bounds, fromProps.bounds) || boundsOptions !== fromProps.boundsOptions)) {\n      if (useFlyTo === true) {\n        this.leafletElement.flyToBounds(bounds, boundsOptions);\n      } else {\n        this.leafletElement.fitBounds(bounds, boundsOptions);\n      }\n    }\n\n    if (boxZoom !== fromProps.boxZoom) {\n      if (boxZoom === true) {\n        this.leafletElement.boxZoom.enable();\n      } else {\n        this.leafletElement.boxZoom.disable();\n      }\n    }\n\n    if (doubleClickZoom !== fromProps.doubleClickZoom) {\n      if (doubleClickZoom === true) {\n        this.leafletElement.doubleClickZoom.enable();\n      } else {\n        this.leafletElement.doubleClickZoom.disable();\n      }\n    }\n\n    if (dragging !== fromProps.dragging) {\n      if (dragging === true) {\n        this.leafletElement.dragging.enable();\n      } else {\n        this.leafletElement.dragging.disable();\n      }\n    }\n\n    if (keyboard !== fromProps.keyboard) {\n      if (keyboard === true) {\n        this.leafletElement.keyboard.enable();\n      } else {\n        this.leafletElement.keyboard.disable();\n      }\n    }\n\n    if (scrollWheelZoom !== fromProps.scrollWheelZoom) {\n      if (scrollWheelZoom === true || typeof scrollWheelZoom === 'string') {\n        this.leafletElement.options.scrollWheelZoom = scrollWheelZoom;\n        this.leafletElement.scrollWheelZoom.enable();\n      } else {\n        this.leafletElement.scrollWheelZoom.disable();\n      }\n    }\n\n    if (tap !== fromProps.tap) {\n      if (tap === true) {\n        this.leafletElement.tap.enable();\n      } else {\n        this.leafletElement.tap.disable();\n      }\n    }\n\n    if (touchZoom !== fromProps.touchZoom) {\n      if (touchZoom === true || typeof touchZoom === 'string') {\n        this.leafletElement.options.touchZoom = touchZoom;\n        this.leafletElement.touchZoom.enable();\n      } else {\n        this.leafletElement.touchZoom.disable();\n      }\n    }\n\n    this._updating = false;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var props = omit.apply(void 0, [this.props].concat(OTHER_PROPS));\n    this.leafletElement = this.createLeafletElement(props);\n    this.leafletElement.on('move', this.onViewportChange);\n    this.leafletElement.on('moveend', this.onViewportChanged);\n\n    if (props.bounds != null) {\n      this.leafletElement.fitBounds(props.bounds, props.boundsOptions);\n    }\n\n    this.contextValue = {\n      layerContainer: this.leafletElement,\n      map: this.leafletElement\n    };\n\n    _MapEvented.prototype.componentDidMount.call(this);\n\n    this.forceUpdate(); // Re-render now that leafletElement is created\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this._ready === false) {\n      this._ready = true;\n\n      if (this.props.whenReady) {\n        this.leafletElement.whenReady(this.props.whenReady);\n      }\n    }\n\n    _MapEvented.prototype.componentDidUpdate.call(this, prevProps);\n\n    this.updateLeafletElement(prevProps, this.props);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    _MapEvented.prototype.componentWillUnmount.call(this);\n\n    this.leafletElement.off('move', this.onViewportChange);\n    this.leafletElement.off('moveend', this.onViewportChanged); // The canvas renderer uses requestAnimationFrame, making a deferred call to a deleted object\n    // When preferCanvas is set, use simpler teardown logic\n\n    if (this.props.preferCanvas === true) {\n      this.leafletElement._initEvents(true);\n\n      this.leafletElement._stop();\n    } else {\n      this.leafletElement.remove();\n    }\n  };\n\n  _proto.shouldUpdateCenter = function shouldUpdateCenter(next, prev) {\n    if (!prev) return true;\n    next = normalizeCenter(next);\n    prev = normalizeCenter(prev);\n    return next[0] !== prev[0] || next[1] !== prev[1];\n  };\n\n  _proto.shouldUpdateBounds = function shouldUpdateBounds(next, prev) {\n    return prev ? !latLngBounds(next).equals(latLngBounds(prev)) : true;\n  };\n\n  _proto.render = function render() {\n    return React.createElement(\"div\", {\n      className: this.className,\n      id: this.props.id,\n      ref: this.bindContainer,\n      style: this.props.style\n    }, this.contextValue ? React.createElement(LeafletProvider, {\n      value: this.contextValue\n    }, this.props.children) : null);\n  };\n\n  return Map;\n}(MapEvented);\n\nexport { Map as default };"]},"metadata":{},"sourceType":"module"}