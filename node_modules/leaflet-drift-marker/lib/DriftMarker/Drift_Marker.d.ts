import { Marker as LeafletMarker, LatLngExpression } from 'leaflet';
declare type ConstMarker = new (...args: any[]) => LeafletMarker;
declare type LeafletType = {
    Marker: ConstMarker;
    Util: any;
};
declare global {
    interface Window {
        Drift_Marker: any;
        L: LeafletType;
    }
}
declare let Leaflet_module: LeafletType;
declare type slideOptions = {
    duration: number;
    keepAtCenter?: boolean;
};
declare class Drift_Marker extends Leaflet_module.Marker {
    private _slideToUntil;
    private _slideToDuration;
    private _slideToLatLng;
    private _slideFromLatLng;
    private _slideKeepAtCenter;
    private _slideDraggingWasAllowed;
    private _slideFrame;
    addInitHook: () => void;
    slideTo: (latlng: LatLngExpression, options: slideOptions) => this | undefined;
    slideCancel(): void;
    private _slideTo;
}
export default Drift_Marker;
//# sourceMappingURL=Drift_Marker.d.ts.map